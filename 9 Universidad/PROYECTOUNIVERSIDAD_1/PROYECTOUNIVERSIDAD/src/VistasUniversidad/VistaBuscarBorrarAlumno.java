
package VistasUniversidad;

import ModeloUniversidad.*;

/**
 *
 * @KAISERKEY
 * 
 */
public class VistaBuscarBorrarAlumno extends javax.swing.JInternalFrame {

    /**
     * Creates new form VistaBuscar
     */
    public VistaBuscarBorrarAlumno() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TBCodigo = new javax.swing.JTextField();
        BTNBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TAlumnos = new javax.swing.JTable();
        BTBorrar = new javax.swing.JButton();
        BTMostrarTodo = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setText("Buscar Alumnos");

        jLabel2.setText("Codigo de Alumno");

        BTNBuscar.setText("Buscar");
        BTNBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNBuscarActionPerformed(evt);
            }
        });

        TAlumnos.setAutoCreateRowSorter(true);
        TAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Nombre", "Domicilio", "DNI", "Fecha Nacimiento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TAlumnos);

        BTBorrar.setText("Borrar");
        BTBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTBorrarActionPerformed(evt);
            }
        });

        BTMostrarTodo.setText("Mostrar Todos");
        BTMostrarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTMostrarTodoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(191, 191, 191)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(TBCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BTNBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BTMostrarTodo))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(235, 235, 235)
                        .addComponent(BTBorrar)))
                .addContainerGap(9, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TBCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BTNBuscar)
                    .addComponent(BTMostrarTodo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BTBorrar)
                .addGap(161, 161, 161))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BTNBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNBuscarActionPerformed
        int id;
        id = Integer.parseInt(TBCodigo.getText());
        Conexion con = new Conexion();
        con.crearConexion();
        con.getConexion();
        Alumno al = new Alumno();
        al.setID_Alumno(id);
        AlumnoData ad = new AlumnoData(con);
        ad.buscarAlumno(al);
        mostrarResultados(al);
        
        
    }//GEN-LAST:event_BTNBuscarActionPerformed

    private void BTMostrarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTMostrarTodoActionPerformed
        Conexion con = new Conexion();
        con.crearConexion();
        con.getConexion();
        AlumnoData ad = new AlumnoData(con);
        ad.listarAlumnosBD();
        mostrarTodo(ad);
    }//GEN-LAST:event_BTMostrarTodoActionPerformed

    private void BTBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTBorrarActionPerformed
       int id;
        id = Integer.parseInt(TBCodigo.getText());
        Conexion con = new Conexion();
        con.crearConexion();
        con.getConexion();
        Alumno al = new Alumno();
        al.setID_Alumno(id);
        AlumnoData ad = new AlumnoData(con);
        ad.buscarAlumno(al);
        ad.borrarAlumno(al.getIDAlumno());
    }//GEN-LAST:event_BTBorrarActionPerformed
    
    public void mostrarResultados(Alumno alumno){
        TBCodigo.setText("");
                TAlumnos.setAutoCreateRowSorter(true);
        TAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {alumno.getIDAlumno(), alumno.getNombre(), alumno.getDomicilio(), alumno.getDNI(), alumno.getFechaNac()},
            },
            new String [] {
                "Codigo", "Nombre", "Domicilio", "DNI", "Fecha Nacimiento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
    }
    public void mostrarTodo(AlumnoData ad){
        TBCodigo.setText("");
        String matrisAlumnosBD[][] = new String[ad.getAlumnosBD().size()][5];
        
        for(int i = 0; i < ad.getAlumnosBD().size(); i++){
            matrisAlumnosBD[i][0]= String.valueOf(ad.getAlumnosBD().get(i).getIDAlumno());
            matrisAlumnosBD[i][1] = ad.getAlumnosBD().get(i).getNombre();
            matrisAlumnosBD[i][2] = ad.getAlumnosBD().get(i).getDomicilio();
            matrisAlumnosBD[i][3] = String.valueOf(ad.getAlumnosBD().get(i).getDNI());
            matrisAlumnosBD[i][4] = String.valueOf(ad.getAlumnosBD().get(i).getFechaNac());
        }
        
        TAlumnos.setAutoCreateRowSorter(true);
        TAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            matrisAlumnosBD,
            new String [] {
                "Codigo", "Nombre", "Domicilio", "DNI", "Fecha Nacimiento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTBorrar;
    private javax.swing.JButton BTMostrarTodo;
    private javax.swing.JButton BTNBuscar;
    private javax.swing.JTable TAlumnos;
    private javax.swing.JTextField TBCodigo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
