/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package universidad.vistas;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.text.ParsePosition;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import modelo.Alumno;
import modelo.AlumnoData;
import modelo.Conexion;
import modelo.CursadaData;
import modelo.MateriaData;

/**
 *
 * @author Martin
 */
public class VistaAlumnos extends javax.swing.JInternalFrame {
        Conexion con = new Conexion();
        AlumnoData ad= new AlumnoData(con);
      //  MateriaData md = new MateriaData(con);
      //  CursadaData cd = new CursadaData(con);
        
    /**
     * Creates new form VistaAlumnos
     */
    public VistaAlumnos() {
        initComponents();
        ///  con = new Conexion();
        // ad = new AlumnoData(con);
        
    }

    private void limpiar(){   
    tbId.setText("");
        tbDni.setText("");
        tbDomicilio.setText("");
        tbFechaNacimiento.setText("");
        tbFechaNacimiento.setText("");
        tbNombre.setText("");
    }

    
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbAlumnos = new javax.swing.JLabel();
        lbNombre = new javax.swing.JLabel();
        tbId = new javax.swing.JTextField();
        tbDni = new javax.swing.JTextField();
        lbDni = new javax.swing.JLabel();
        lbId = new javax.swing.JLabel();
        lbDomicilio = new javax.swing.JLabel();
        lbFechaNacimiento = new javax.swing.JLabel();
        tbDomicilio = new javax.swing.JTextField();
        tbNombre = new javax.swing.JTextField();
        tbFechaNacimiento = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        lbAlumnos.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        lbAlumnos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbAlumnos.setText("Alumnos");

        lbNombre.setFont(new java.awt.Font("Lucida Sans Unicode", 1, 14)); // NOI18N
        lbNombre.setText("Nombre");

        tbId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tbIdKeyTyped(evt);
            }
        });

        tbDni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tbDniKeyTyped(evt);
            }
        });

        lbDni.setFont(new java.awt.Font("Lucida Sans Unicode", 1, 14)); // NOI18N
        lbDni.setText("DNI");

        lbId.setFont(new java.awt.Font("Lucida Sans Unicode", 1, 14)); // NOI18N
        lbId.setText("Codigo alumno");

        lbDomicilio.setFont(new java.awt.Font("Lucida Sans Unicode", 1, 14)); // NOI18N
        lbDomicilio.setText("Domicilio");

        lbFechaNacimiento.setFont(new java.awt.Font("Lucida Sans Unicode", 1, 14)); // NOI18N
        lbFechaNacimiento.setText("Fecha nacimiento");

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(lbAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbNombre)
                            .addComponent(lbDni)
                            .addComponent(lbId)
                            .addComponent(lbDomicilio)
                            .addComponent(lbFechaNacimiento))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tbNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tbId, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(140, 140, 140)
                                        .addComponent(btnBuscar))
                                    .addComponent(tbDni, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(tbDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tbFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(btnGuardar)
                        .addGap(38, 38, 38)
                        .addComponent(btnActualizar)
                        .addGap(36, 36, 36)
                        .addComponent(btnEliminar)
                        .addGap(41, 41, 41)
                        .addComponent(btnLimpiar)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lbAlumnos)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbId)
                    .addComponent(btnBuscar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNombre)
                    .addComponent(tbNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDni)
                    .addComponent(tbDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDomicilio)
                    .addComponent(tbDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbFechaNacimiento)
                    .addComponent(tbFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminar)
                    .addComponent(btnActualizar)
                    .addComponent(btnGuardar)
                    .addComponent(btnLimpiar))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
         String nombre;
         int dni;
         String domicilio;
         LocalDate fechaNac;
    
     
    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        // int id_alumno; 
        if((tbNombre.getText().isEmpty()) || (tbDni.getText().isEmpty()) || (tbDomicilio.getText().isEmpty()) || (tbDomicilio.getText().isEmpty())) {
                  JOptionPane.showMessageDialog(null, "Debe ingresar datos del alumno", "Guardar", JOptionPane.WARNING_MESSAGE); 
        }else{
        }
        nombre= tbNombre.getText();
        dni= Integer.parseInt(tbDni.getText());
        domicilio=tbDomicilio.getText();
        fechaNac= LocalDate.parse(tbFechaNacimiento.getText(),DateTimeFormatter.ofPattern("dd/MM/yyyy"));
        Alumno alumno = new Alumno(dni,nombre,domicilio,fechaNac);
          try {
               ad.guardarAlumno(alumno);
           } catch (SQLException ex) {
           Logger.getLogger(VistaAlumnos.class.getName()).log(Level.SEVERE, null, ex);
           }
        tbId.setText(alumno.getId()+"");
        JOptionPane.showMessageDialog(null, "Se guardo alumno", "Info", JOptionPane.WARNING_MESSAGE); 
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
            limpiar();
       
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        
        if((tbId.getText().isEmpty())) {
            JOptionPane.showMessageDialog(null, "Debe ingresar un codigo de alumno", "Eliminar", JOptionPane.WARNING_MESSAGE); 
        }else{
        int id=Integer.parseInt(tbId.getText());
            try {
                boolean seElimino=ad.borrarAlumno(id);
                if (seElimino) JOptionPane.showMessageDialog(null, "Se elimino alumno", "Info", JOptionPane.WARNING_MESSAGE); 
            } catch (SQLException ex) {
                Logger.getLogger(VistaAlumnos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }       // limpiar();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
       // btnBuscarActionPerformed(evt);
             if((tbId.getText().isEmpty())) {
                  JOptionPane.showMessageDialog(null, "Debe ingresar un codigo de alumno", "Actualizar", JOptionPane.WARNING_MESSAGE); 
        }else{
       int id=Integer.parseInt(tbId.getText());
        nombre= tbNombre.getText();
        dni= Integer.parseInt(tbDni.getText());
        domicilio=tbDomicilio.getText();
        fechaNac= LocalDate.parse(tbFechaNacimiento.getText(),DateTimeFormatter.ofPattern("dd/MM/yyyy"));
        Alumno alumno = new Alumno(id,dni,nombre,domicilio,fechaNac);
        ad.actualizarAlumno(alumno);
        JOptionPane.showMessageDialog(null, "Se actualizo alumno", "Info", JOptionPane.WARNING_MESSAGE); 
      }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void tbIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbIdKeyTyped
        // TODO add your handling code here:         
            char c=evt.getKeyChar();      
          if(Character.isLetter(c)) {
              getToolkit().beep();
              evt.consume();
                // Error.setText("Ingresa Solo Numeros");
          }          
    
    }//GEN-LAST:event_tbIdKeyTyped

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        int id;
        int dni;
        String nombre;
        if (!tbId.getText().isEmpty()) {
           id=Integer.parseInt(tbId.getText());
             
        Alumno alu= ad.buscarAlumno(id);
        if (alu !=null){
            tbId.setText(alu.getId()+"");
            tbNombre.setText(alu.getNombre());
            tbDni.setText(alu.getDni()+"");
            tbDomicilio.setText(alu.getDomicilio());
            tbFechaNacimiento.setText(alu.getFechaNac().format(DateTimeFormatter.ofPattern("dd/MM/yyyy")));
        } else {
         JOptionPane.showMessageDialog(null, "El alumno no existe", "Info", JOptionPane.WARNING_MESSAGE); 
        } 
        } //else {
            if (!tbDni.getText().isEmpty()){
        dni=Integer.parseInt(tbDni.getText());
             
        Alumno alu= ad.buscarAlumnoXDNI(dni);
        if (alu !=null){
            tbId.setText(alu.getId()+"");
            tbNombre.setText(alu.getNombre());
            tbDni.setText(alu.getDni()+"");
            tbDomicilio.setText(alu.getDomicilio());
            tbFechaNacimiento.setText(alu.getFechaNac().format(DateTimeFormatter.ofPattern("dd/MM/yyyy")));
        } else {
         JOptionPane.showMessageDialog(null, "El alumno no existe", "Info", JOptionPane.WARNING_MESSAGE); 
        }
        } //else {
                if (!tbNombre.getText().isEmpty()){  
                 nombre=tbNombre.getText();
             
        Alumno alu= ad.buscarAlumnoXNombre(nombre);
        if (alu !=null){
            tbId.setText(alu.getId()+"");
            tbNombre.setText(alu.getNombre());
            tbDni.setText(alu.getDni()+"");
            tbDomicilio.setText(alu.getDomicilio());
            tbFechaNacimiento.setText(alu.getFechaNac().format(DateTimeFormatter.ofPattern("dd/MM/yyyy")));
        } else {
         JOptionPane.showMessageDialog(null, "El alumno no existe", "Info", JOptionPane.WARNING_MESSAGE); 
        } 
           // }   
           //}       
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void tbDniKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbDniKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();      
          if(Character.isLetter(c)) {
              getToolkit().beep();
              evt.consume();
                // Error.setText("Ingresa Solo Numeros");
          }   
    }//GEN-LAST:event_tbDniKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JLabel lbAlumnos;
    private javax.swing.JLabel lbDni;
    private javax.swing.JLabel lbDomicilio;
    private javax.swing.JLabel lbFechaNacimiento;
    private javax.swing.JLabel lbId;
    private javax.swing.JLabel lbNombre;
    private javax.swing.JTextField tbDni;
    private javax.swing.JTextField tbDomicilio;
    private javax.swing.JTextField tbFechaNacimiento;
    private javax.swing.JTextField tbId;
    private javax.swing.JTextField tbNombre;
    // End of variables declaration//GEN-END:variables
}
